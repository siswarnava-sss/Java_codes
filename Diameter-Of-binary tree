/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int help(TreeNode root, int[] max_diameter){
        if(root == null){
            return 0;
        }

        int l = help(root.left,max_diameter);
        int r = help(root.right,max_diameter);

        max_diameter[0] = Math.max(l+r, max_diameter[0]);

        return 1+ Math.max(l,r);
    }
    public int diameterOfBinaryTree(TreeNode root) {

            int[] diameter = new int[1];
            
            help(root,diameter);

            return diameter[0];

        
    }
}
