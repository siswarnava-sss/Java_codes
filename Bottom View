/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int data;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int val) { data = val; left = null, right = null }
 * }
 **/

class Solution {

    
    public List<Integer> bottomView(TreeNode root) {
        //your code goes here

        List<Integer> res= new ArrayList<>();

        if(root == null) return res;


        TreeMap<Integer,Integer> tmap = new TreeMap<>();

        Queue<Map.Entry<TreeNode, Integer>> q = new LinkedList<>();

        
        q.offer(new AbstractMap.SimpleEntry<>(root, 0));

        while(!q.isEmpty()){

            Map.Entry<TreeNode, Integer> it = q.poll();
            TreeNode node = it.getKey();
            int level = it.getValue();

            tmap.put(level,node.data);

            if(node.left != null){
                q.add( new AbstractMap.SimpleEntry<>(node.left, level -1));
                
            } 
            if(node.right != null){
                   q.add( new AbstractMap.SimpleEntry<>(node.right, level +1));
              } 

        }

        for (Integer t : tmap.values()) {
            res.add(t);
        }


        return res;

        
    }
}
